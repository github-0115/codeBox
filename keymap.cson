# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-workspace':
   'ctrl-alt-6': 'project-folder:add'
   'ctrl-alt-7': 'project-folder:remove'
   'ctrl-alt-8': 'project-folder:replace'

'.platform-win32 atom-text-editor':
   'ctrl-alt-f2': 'unset!'
   'ctrl-alt-f2': 'bookmarks:view-all'
   'ctrl-f2': 'unset!'
   'ctrl-f2': 'bookmarks:toggle-bookmark'
   'f3': 'find-and-replace:show'
   'ctrl-shift-alt-o': 'application:add-project-folder'
   'ctrl-6' : 'symbols-view:toggle-file-symbols'
   'ctrl-.': 'unset!'

'.platform-win32':
   'ctrl-.': 'unset!'


#'.platform-win32, .platform-linux':
#   'f3': 'find-and-replace:show'


#'atom-workspace':
#   'ctrl-alt-f2': 'bookmarks:view-all'

'.project-folder atom-text-editor[mini]':
   'ctrl-alt-9': 'project-folder:replace'
   
'body':
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-shift-tab': 'pane:show-previous-item'
  
  



